// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Models
model User {
  id         Int     @id @default(autoincrement())
  username   String  @unique
  email      String  @unique
  password   String
  createdAt  DateTime @default(now())
  planId     Int
  plan       Plan @relation(fields: [planId], references: [id])
  links      Link[]
  groups     Group[]
  tags       Tag[]
}

model Plan {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  price       Float
  links_limit Int
  api_limit   Int
  qr          Boolean
  pro_analytics Boolean
  users       User[]
}

model Link {
  id          Int     @id @default(autoincrement())
  userId      Int?
  guest_sessionId Int?
  longUrl     String
  shortUrl    String  @unique
  status      Boolean @default(true)
  groupId     Int?    // Optional foreign key to Group
  tags        Tag[]   @relation("LinkTags")
  accesses    Access[]
  d_expire    DateTime?
  accessLimit Int?
  password    String?
  mobileUrl   String?
  desktopUrl  String?
  blockedCountries Country[] @relation("LinkCountries")
  sufix       String?  @unique
  metadataId  Int?    @unique
  smetadata    MetadataConfig? @relation(fields: [metadataId], references: [id], onDelete: Cascade)
  user        User? @relation(fields: [userId], references: [id])
  guest_session GuestSession? @relation(fields: [guest_sessionId], references: [id])
  group       Group?  @relation(fields: [groupId], references: [id]) // Optional relation to Group
  createdAt   DateTime @default(now())
}

model MetadataConfig {
  id             Int     @id @default(autoincrement())
  title          String?
  description    String?
  imageUrl       String?
  link           Link?
}

model Group {
  id         Int     @id @default(autoincrement())
  userId     Int
  title       String
  description String
  color      Colors @default(NEUTRAL)
  createdAt  DateTime @default(now())
  user       User @relation(fields: [userId], references: [id])
  links      Link[]
}

enum Method {
  LINK
  QRCODE
}

enum Device {
  MOBILE
  DESKTOP
}

model Access {
  id         Int     @id @default(autoincrement())
  linkId     Int
  date       DateTime @default(now())
  device     Device
  ip         String
  is_vpn     String
  country    String
  method     Method
  link       Link @relation(fields: [linkId], references: [id], onDelete: Cascade)
}

model Tag {
  id     Int    @id @default(autoincrement())
  userId Int
  name   String @default("Etiqueta nueva") @db.VarChar(25)
  color  Colors @default(NEUTRAL)
  user   User @relation(fields: [userId], references: [id])
  links  Link[] @relation("LinkTags")
}

model Country {
  id              Int              @id @default(autoincrement())
  code            String           @db.VarChar(2)
  name            String           @db.VarChar(100)
  links           Link[]           @relation("LinkCountries")
}

model GuestSession {
  id         Int     @id @default(autoincrement())
  createdAt  DateTime @default(now())
  links      Link[]
}

enum Colors {
  RED
  ORANGE
  AMBER
  YELLOW
  LIME
  GREEN
  EMERALD
  TEAL
  CYAN
  SKY
  BLUE
  INDIGO
  VIOLET
  PURPLE
  FUCHSIA
  PINK
  ROSE
  GRAY
  ZINC
  NEUTRAL
  STONE
}